server_name: "cmc.rip"
pid_file: /home/synapse/homeserver.pid

# The path to the web client which will be served at /_matrix/client/
# if 'webclient' is configured under the 'listeners' configuration.
#
#web_client_location: "/path/to/web/root"

public_baseurl: https://cmc.rip/
use_presence: false

require_auth_for_profile_requests: true
allow_public_rooms_without_auth: false
allow_public_rooms_over_federation: false
filter_timeline_limit: -1
block_non_admin_invites: false

# Room searching
#
# If disabled, new messages will not be indexed for searching and users
# will receive errors when searching for messages. Defaults to enabled.
#
#enable_search: false

federation_domain_whitelist: []

federation_ip_range_blacklist:
  - '127.0.0.0/8'
  - '10.0.0.0/8'
  - '172.16.0.0/12'
  - '192.168.0.0/16'
  - '100.64.0.0/10'
  - '169.254.0.0/16'
  - '::1/128'
  - 'fe80::/64'
  - 'fc00::/7'

# List of ports that Synapse should listen on, their purpose and their
# configuration.
#
# Options for each listener include:
#
#   port: the TCP port to bind to
#
#   bind_addresses: a list of local addresses to listen on. The default is
#       'all local interfaces'.
#
#   type: the type of listener. Normally 'http', but other valid options are:
#       'manhole' (see docs/manhole.md),
#       'metrics' (see docs/metrics-howto.md),
#       'replication' (see docs/workers.md).
#
#   tls: set to true to enable TLS for this listener. Will use the TLS
#       key/cert specified in tls_private_key_path / tls_certificate_path.
#
#   x_forwarded: Only valid for an 'http' listener. Set to true to use the
#       X-Forwarded-For header as the client IP. Useful when Synapse is
#       behind a reverse-proxy.
#
#   resources: Only valid for an 'http' listener. A list of resources to host
#       on this port. Options for each resource are:
#
#       names: a list of names of HTTP resources. See below for a list of
#           valid resource names.
#
#       compress: set to true to enable HTTP comression for this resource.
#
#   additional_resources: Only valid for an 'http' listener. A map of
#        additional endpoints which should be loaded via dynamic modules.
#
# Valid resource names are:
#
#   client: the client-server API (/_matrix/client), and the synapse admin
#       API (/_synapse/admin). Also implies 'media' and 'static'.
#
#   consent: user consent forms (/_matrix/consent). See
#       docs/consent_tracking.md.
#
#   federation: the server-server API (/_matrix/federation). Also implies
#       'media', 'keys', 'openid'
#
#   keys: the key discovery API (/_matrix/keys).
#
#   media: the media API (/_matrix/media).
#
#   metrics: the metrics interface. See docs/metrics-howto.md.
#
#   openid: OpenID authentication.
#
#   replication: the HTTP replication API (/_synapse/replication). See
#       docs/workers.md.
#
#   static: static resources under synapse/static (/_matrix/static). (Mostly
#       useful for 'fallback authentication'.)
#
#   webclient: A web client. Requires web_client_location to be set.
#
listeners:
  - port: 8008
    type: http
    tls: false
    resources:
      - names: [client, federation]

admin_contact: 'mailto:jacob@solidangle.ca'

mau_stats_only: true

limit_remote_rooms:
  enabled: true
  complexity: 1.0
  complexity_error: "This room is too complex."

require_membership_for_aliases: true

allow_per_room_profiles: true

redaction_retention_period: 2d

user_ips_max_age: 14d

## Database ##

database:
  name: "sqlite3"
  args:
    database: "/home/synapse/homeserver.db"

## Logging ##

log_config: "/home/synapse/cmc.rip.log.config"

## Ratelimiting ##

## Media Store ##

# TODO: implement/use GCS instead
#enable_media_repo: false
media_store_path: "/home/synapse/media_store"
uploads_path: "/home/synapse/uploads"
max_upload_size: 2M
max_image_pixels: 32M

# TODO: think about this later
#dynamic_thumbnails: false
#thumbnail_sizes:
#  - width: 32
#    height: 32
#    method: crop
#  - width: 96
#    height: 96
#    method: crop
#  - width: 320
#    height: 240
#    method: scale
#  - width: 640
#    height: 480
#    method: scale
#  - width: 800
#    height: 600
#    method: scale

url_preview_ip_range_blacklist:
  - '127.0.0.0/8'
  - '10.0.0.0/8'
  - '172.16.0.0/12'
  - '192.168.0.0/16'
  - '100.64.0.0/10'
  - '169.254.0.0/16'
  - '::1/128'
  - 'fe80::/64'
  - 'fc00::/7'

# Not for security!
url_preview_url_blacklist:
  # blacklist all *.google.com URLs
  - netloc: 'google.com'
  - netloc: '*.google.com'

max_spider_size: 1M


## Captcha ##
# See docs/CAPTCHA_SETUP for full details of configuring this.
# TODO: should we?

## Registration ##

enable_registration: true
registrations_require_3pid:
  - email

bcrypt_rounds: 12

allow_guest_access: false

#auto_join_rooms:
#  - "#example:example.com"

autocreate_auto_join_rooms: true

## Metrics ###

report_stats: false

## Signing Keys ##

signing_key_path: "/home/synapse/keys/cmc.rip.signing.key"

# The trusted servers to download signing keys from.
#
# When we need to fetch a signing key, each server is tried in parallel.
#
# Normally, the connection to the key server is validated via TLS certificates.
# Additional security can be provided by configuring a `verify key`, which
# will make synapse check that the response is signed by that key.
#
# This setting supercedes an older setting named `perspectives`. The old format
# is still supported for backwards-compatibility, but it is deprecated.
#
# 'trusted_key_servers' defaults to matrix.org, but using it will generate a
# warning on start-up. To suppress this warning, set
# 'suppress_key_server_warning' to true.
#
# Options for each entry in the list include:
#
#    server_name: the name of the server. required.
#
#    verify_keys: an optional map from key id to base64-encoded public key.
#       If specified, we will check that the response is signed by at least
#       one of the given keys.
#
#    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is unset,
#       and federation_verify_certificates is not `true`, synapse will refuse
#       to start, because this would allow anyone who can spoof DNS responses
#       to masquerade as the trusted key server. If you know what you are doing
#       and are sure that your network environment provides a secure connection
#       to the key server, you can set this to `true` to override this
#       behaviour.
#
# An example configuration might look like:
#
#trusted_key_servers:
#  - server_name: "my_trusted_server.example.com"
#    verify_keys:
#      "ed25519:auto": "abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr"
#  - server_name: "my_other_trusted_server.example.com"
#
trusted_key_servers:
  - server_name: "matrix.org"

# Uncomment the following to disable the warning that is emitted when the
# trusted_key_servers include 'matrix.org'. See above.
#
#suppress_key_server_warning: true

password_config:
   # TODO: can we do something better?
   #enabled: false
   localdb_enabled: false

   # Uncomment and change to a secret random string for extra security.
   # DO NOT CHANGE THIS AFTER INITIAL SETUP!
   #
   #pepper: "EVEN_MORE_SECRET"



# Enable sending emails for password resets, notification events or
# account expiry notices
#
# If your SMTP server requires authentication, the optional smtp_user &
# smtp_pass variables should be used
#
#email:
#   enable_notifs: false
#   smtp_host: "localhost"
#   smtp_port: 25 # SSL: 465, STARTTLS: 587
#   smtp_user: "exampleusername"
#   smtp_pass: "examplepassword"
#   require_transport_security: false
#
#   # notif_from defines the "From" address to use when sending emails.
#   # It must be set if email sending is enabled.
#   #
#   # The placeholder '%(app)s' will be replaced by the application name,
#   # which is normally 'app_name' (below), but may be overridden by the
#   # Matrix client application.
#   #
#   # Note that the placeholder must be written '%(app)s', including the
#   # trailing 's'.
#   #
#   notif_from: "Your Friendly %(app)s homeserver <noreply@example.com>"
#
#   # app_name defines the default value for '%(app)s' in notif_from. It
#   # defaults to 'Matrix'.
#   #
#   #app_name: my_branded_matrix_server
#
#   # Enable email notifications by default
#   #
#   notif_for_new_users: true
#
#   # Defining a custom URL for Riot is only needed if email notifications
#   # should contain links to a self-hosted installation of Riot; when set
#   # the "app_name" setting is ignored
#   #
#   riot_base_url: "http://localhost/riot"
#
#   # Configure the time that a validation email or text message code
#   # will expire after sending
#   #
#   # This is currently used for password resets
#   #
#   #validation_token_lifetime: 1h
#
#   # Template directory. All template files should be stored within this
#   # directory. If not set, default templates from within the Synapse
#   # package will be used
#   #
#   # For the list of default templates, please see
#   # https://github.com/matrix-org/synapse/tree/master/synapse/res/templates
#   #
#   #template_dir: res/templates
#
#   # Templates for email notifications
#   #
#   notif_template_html: notif_mail.html
#   notif_template_text: notif_mail.txt
#
#   # Templates for account expiry notices
#   #
#   expiry_template_html: notice_expiry.html
#   expiry_template_text: notice_expiry.txt
#
#   # Templates for password reset emails sent by the homeserver
#   #
#   #password_reset_template_html: password_reset.html
#   #password_reset_template_text: password_reset.txt
#
#   # Templates for registration emails sent by the homeserver
#   #
#   #registration_template_html: registration.html
#   #registration_template_text: registration.txt
#
#   # Templates for validation emails sent by the homeserver when adding an email to
#   # your user account
#   #
#   #add_threepid_template_html: add_threepid.html
#   #add_threepid_template_text: add_threepid.txt
#
#   # Templates for password reset success and failure pages that a user
#   # will see after attempting to reset their password
#   #
#   #password_reset_template_success_html: password_reset_success.html
#   #password_reset_template_failure_html: password_reset_failure.html
#
#   # Templates for registration success and failure pages that a user
#   # will see after attempting to register using an email or phone
#   #
#   #registration_template_success_html: registration_success.html
#   #registration_template_failure_html: registration_failure.html
#
#   # Templates for success and failure pages that a user will see after attempting
#   # to add an email or phone to their account
#   #
#   #add_threepid_success_html: add_threepid_success.html
#   #add_threepid_failure_html: add_threepid_failure.html


# TODO: what is this?
enable_group_creation: false

# If enabled, non server admins can only create groups with local parts
# starting with this prefix
#
#group_creation_prefix: "unofficial/"


user_directory:
  enabled: true
  search_all_users: true


# The `alias_creation` option controls who's allowed to create aliases
# on this server.
#
# The format of this option is a list of rules that contain globs that
# match against user_id, room_id and the new alias (fully qualified with
# server name). The action in the first rule that matches is taken,
# which can currently either be "allow" or "deny".
#
# Missing user_id/room_id/alias fields default to "*".
#
# If no rules match the request is denied. An empty list means no one
# can create aliases.
#
# Options for the rules include:
#
#   user_id: Matches against the creator of the alias
#   alias: Matches against the alias being created
#   room_id: Matches against the room ID the alias is being pointed at
#   action: Whether to "allow" or "deny" the request if the rule matches
#
# The default is:
#
#alias_creation_rules:
#  - user_id: "*"
#    alias: "*"
#    room_id: "*"
#    action: allow

# The `room_list_publication_rules` option controls who can publish and
# which rooms can be published in the public room list.
#
# The format of this option is the same as that for
# `alias_creation_rules`.
#
# If the room has one or more aliases associated with it, only one of
# the aliases needs to match the alias rule. If there are no aliases
# then only rules with `alias: *` match.
#
# If no rules match the request is denied. An empty list means no one
# can publish rooms.
#
# Options for the rules include:
#
#   user_id: Matches agaisnt the creator of the alias
#   room_id: Matches against the room ID being published
#   alias: Matches against any current local or canonical aliases
#            associated with the room
#   action: Whether to "allow" or "deny" the request if the rule matches
#
# The default is:
#
#room_list_publication_rules:
#  - user_id: "*"
#    alias: "*"
#    room_id: "*"
#    action: allow


# Server admins can define a Python module that implements extra rules for
# allowing or denying incoming events. In order to work, this module needs to
# override the methods defined in synapse/events/third_party_rules.py.
#
# This feature is designed to be used in closed federations only, where each
# participating server enforces the same rules.
#
#third_party_event_rules:
#  module: "my_custom_project.SuperRulesSet"
#  config:
#    example_option: 'things'


